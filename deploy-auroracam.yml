---
- hosts: auroracam
  vars_files: 
    - /mnt/e/dev/apikeys/mqvariables.enc
  vars:
    srcdir: /mnt/e/dev/meteorhunting/auroracam
    destdir: ~/source/auroracam
    macaddress: 00:12:13:63:0b:c6
    ipaddress: 192.168.1.40
    latitude: 51.88
    longitude: -1.31
    altitude: 80

  tasks:
  - name: Ensures {{destdir}} exists
    file: path={{destdir}} state=directory  
  - name: Copy auroracam files
    copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
    with_items:
    - {src: '{{srcdir}}/auroraCam.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/setExpo.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/makeImageIndex.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/imgindex.html.template', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/index.html', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/redoTimelapse.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/uploadMissedMp4.sh', dest: '{{destdir}}/', mode: '755', backup: no }
    - {src: '{{srcdir}}/sendToYoutube.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/archAndFree.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/makeMP4.sh', dest: '{{destdir}}/', mode: '755', backup: no }
    - {src: '{{srcdir}}/startAuroraCam.sh', dest: '{{destdir}}/', mode: '755', backup: no }
    - {src: '{{srcdir}}/checkAuroracam.sh', dest: '{{destdir}}/', mode: '755', backup: no }
    - {src: '{{srcdir}}/archiveData.sh', dest: '{{destdir}}/', mode: '755', backup: no }
    - {src: '{{srcdir}}/config.ini', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/logToMQTT.sh', dest: '{{destdir}}/', mode: '754', backup: no }
    - {src: '{{srcdir}}/requirements.txt', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/mqtt.cfg', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/auroracam.service', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/CamManager.py', dest: '{{destdir}}/', mode: '644', backup: no }
    - {src: '{{srcdir}}/camManager.sh', dest: '{{destdir}}/', mode: '755', backup: no }
  # auroracam settings
  - name: update camera IP address
    ansible.builtin.replace:
      path: '{{destdir}}/config.ini'
      regexp: "MYIP"
      replace: "{{ ipaddress }}"
  - name: update camera MAC address
    ansible.builtin.replace:
      path: '{{destdir}}/config.ini'
      regexp: "MYMAC"
      replace: "{{ macaddress }}"
  - name: update latitude
    ansible.builtin.replace:
      path: '{{destdir}}/config.ini'
      regexp: "MYLAT"
      replace: "{{ latitude }}"
  - name: update longitude
    ansible.builtin.replace:
      path: '{{destdir}}/config.ini'
      regexp: "MYLON"
      replace: "{{ longitude }}"
  - name: update altitude
    ansible.builtin.replace:
      path: '{{destdir}}/config.ini'
      regexp: "MYALT"
      replace: "{{ altitude }}"
  - name: update RGB adj
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'RGBADJ='
      line: 'RGBADJ=1.0,1.0,1.0'
  # upload settings
  - name: update uploadloc
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'S3UPLOADLOC='
      line: 'S3UPLOADLOC=s3://mjmm-data/UK9999'
  - name: update idserver
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'IDSERVER='
      line: 'IDSERVER=wordpresssite'
  - name: update idserver key
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'IDKEY='
      line: 'IDKEY=~/.ssh/auroracam'
  # youtube settings 
  - name: update youtube setting
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'DOUPLOAD=0'
      line: 'DOUPLOAD=1'
  # mqtt settings
  - name: update mqtt broker
    lineinfile: 
      path: '{{destdir}}/mqtt.cfg'
      regexp: 'BROKER='
      line: 'BROKER=wxsatpi'
  - name: update MQTT username
    lineinfile:
      path: '{{destdir}}/mqtt.cfg'
      regexp: 'USERNAME='
      line: 'USERNAME=rmscams'
  - name: update MQTT password
    lineinfile:
      path: '{{destdir}}/mqtt.cfg'
      regexp: 'PASSWORD='
      line: 'PASSWORD={{ rmscampassword }}'
  # archive settings
  - name: update archserver
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'ARCHSERVER='
      line: 'ARCHSERVER=thelinux'
  - name: update archlocation
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'ARCHFLDR='
      line: 'ARCHFLDR=/data3/astrodata/auroracam'
  - name: update arch userid
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'ARCHUSER='
      line: 'ARCHUSER=mark'
  - name: update arch ssh keyname
    lineinfile: 
      path: '{{destdir}}/config.ini'
      regexp: 'ARCHKEY='
      line: 'ARCHKEY=~/.ssh/markskey.pem'

  - name: make sure modules are downloaded
    shell: source ~/vAuroracam/bin/activate && pip install -r {{destdir}}/requirements.txt
    # also need sudo apt-get install python3-opencv ffmpeg
    args:
      executable: /bin/bash
  - name: install webserver index
    shell: sudo cp {{destdir}}/index.html /var/www/html
    args:
      executable: /bin/bash

  
